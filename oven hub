local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Oven Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Oven Hub",
   LoadingSubtitle = "By @tylerrdann, & @madox_alt",
   Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = true,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "vpRAVqYXhF", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "OvenHub",
      Subtitle = "By @tylerrdann, & @madox_alt",
      Note = "Find key at discord.gg/vpRAVqYXhF", -- Use this to tell the user how to get a key
      FileName = "OvenHubCoollol", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"OvenHubOnTop123"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("🙎‍♂️Player", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Executed Successfully",
   Content = "Enjoy",
   Duration = 6,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "Inf Jump",
   Callback = function()
            Rayfield:Notify({
   Title = "Inf Jump activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
                   --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   -- The function that takes place when the button is pressed
   end,
})

local Button = MainTab:CreateButton({
   Name = "F to tp",
   Callback = function()
            Rayfield:Notify({
   Title = "TP activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            -- Reference to the player and their mouse
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Function to teleport the player to the mouse cursor's position when "F" is pressed
local function onKeyPress(input)
    -- Check if the pressed key is "F"
    if input.KeyCode == Enum.KeyCode.F then
        -- Get the position of the mouse in the 3D world
        local targetPosition = mouse.Hit.p

        -- Teleport the player to the target position
        -- Ensure the character exists
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        end
    end
end

-- Connect the input began event to detect key presses
game:GetService("UserInputService").InputBegan:Connect(onKeyPress)
   -- The function that takes place when the button is pressed
   end,
})

local Button = MainTab:CreateButton({
   Name = "E To Fly",
   Callback = function()
            Rayfield:Notify({
   Title = "Fly Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            repeat wait() 
    until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid") 
local mouse = game.Players.LocalPlayer:GetMouse() 
repeat wait() until mouse
local plr = game.Players.LocalPlayer 
local torso = plr.Character.Torso 
local flying = false
local deb = true 
local ctrl = {f = 0, b = 0, l = 0, r = 0} 
local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
local maxspeed = 50 
local speed = 0 
 
function Fly() 
local bg = Instance.new("BodyGyro", torso) 
bg.P = 9e4 
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
bg.cframe = torso.CFrame 
local bv = Instance.new("BodyVelocity", torso) 
bv.velocity = Vector3.new(0,0.1,0) 
bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
repeat wait() 
plr.Character.Humanoid.PlatformStand = true 
if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
speed = speed+.5+(speed/maxspeed) 
if speed > maxspeed then 
speed = maxspeed 
end 
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
speed = speed-1 
if speed < 0 then 
speed = 0 
end 
end 
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
else 
bv.velocity = Vector3.new(0,0.1,0) 
end 
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
until not flying 
ctrl = {f = 0, b = 0, l = 0, r = 0} 
lastctrl = {f = 0, b = 0, l = 0, r = 0} 
speed = 0 
bg:Destroy() 
bv:Destroy() 
plr.Character.Humanoid.PlatformStand = false 
end 
mouse.KeyDown:connect(function(key) 
if key:lower() == "e" then 
if flying then flying = false 
else 
flying = true 
Fly() 
end 
elseif key:lower() == "w" then 
ctrl.f = 1 
elseif key:lower() == "s" then 
ctrl.b = -1 
elseif key:lower() == "a" then 
ctrl.l = -1 
elseif key:lower() == "d" then 
ctrl.r = 1 
end 
end) 
mouse.KeyUp:connect(function(key) 
if key:lower() == "w" then 
ctrl.f = 0 
elseif key:lower() == "s" then 
ctrl.b = 0 
elseif key:lower() == "a" then 
ctrl.l = 0 
elseif key:lower() == "d" then 
ctrl.r = 0 
end 
end)
Fly()
   -- The function that takes place when the button is pressed
   end,
})

local Button = MainTab:CreateButton({
   Name = "Noclip Tool",
   Callback = function()
            Rayfield:Notify({
   Title = "NoClip Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
          local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer
local noclip = false
local connection
 
local function notify(message)
    StarterGui:SetCore("SendNotification", {
        Title = "Notification";
        Text = message;
        Duration = 3;
    })
end
 
local function toggleNoclip()
    noclip = not noclip
    if noclip then
        connection = RunService.Stepped:Connect(function()
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
        notify("noclip on")
    else
        if connection then
            connection:Disconnect()
        end
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        notify("noclip off")
    end
end
 
local function createTool()
    local tool = Instance.new("Tool")
    tool.Name = "Noclip Tool"
    tool.RequiresHandle = false
    tool.CanBeDropped = false
    tool.Parent = player:WaitForChild("Backpack")
 
    tool.Activated:Connect(function()
        toggleNoclip()
    end)
end
 
local function onCharacterAdded()
    wait(0.1)
    createTool()
end
 
if player.Character then
    onCharacterAdded()
end
 
player.CharacterAdded:Connect(onCharacterAdded)  
   -- The function that takes place when the button is pressed
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Jump",
   CurrentValue = 50,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Hip Height",
   Range = {0, 100},
   Increment = 1,
   Suffix = "Hip",
   CurrentValue = 0,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = (Value)
   end,
})

local AimbotTab = Window:CreateTab("🔫Aimbot", nil) -- Title, Image
local Section = AimbotTab:CreateSection("Aimlock")

local Button = AimbotTab:CreateButton({
   Name = "Aimlock",
   Callback = function()
            Rayfield:Notify({
   Title = "Aimlock activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
     PLAYER  = game.Players.LocalPlayer
MOUSE   = PLAYER:GetMouse()
CC      = game.Workspace.CurrentCamera
 
ENABLED      = false
ESP_ENABLED  = false
 
_G.FREE_FOR_ALL = true
 
_G.ESP_BIND    = 52
_G.CHANGE_AIM  = 'q'
 
_G.AIM_AT = 'Head'
 
wait(1)
 
function GetNearestPlayerToMouse()
	local PLAYERS      = {}
	local PLAYER_HOLD  = {}
	local DISTANCES    = {}
	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= PLAYER then
			table.insert(PLAYERS, v)
		end
	end
	for i, v in pairs(PLAYERS) do
		if _G.FREE_FOR_ALL == false then
			if v and (v.Character) ~= nil and v.TeamColor ~= PLAYER.TeamColor then
				local AIM = v.Character:FindFirstChild(_G.AIM_AT)
				if AIM ~= nil then
					local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
					local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
					local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
					local DIFF                     = math.floor((POS - AIM.Position).magnitude)
					PLAYER_HOLD[v.Name .. i]       = {}
					PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
					PLAYER_HOLD[v.Name .. i].plr   = v
					PLAYER_HOLD[v.Name .. i].diff  = DIFF
					table.insert(DISTANCES, DIFF)
				end
			end
		elseif _G.FREE_FOR_ALL == true then
			local AIM = v.Character:FindFirstChild(_G.AIM_AT)
			if AIM ~= nil then
				local DISTANCE                 = (AIM.Position - game.Workspace.CurrentCamera.CoordinateFrame.p).magnitude
				local RAY                      = Ray.new(game.Workspace.CurrentCamera.CoordinateFrame.p, (MOUSE.Hit.p - CC.CoordinateFrame.p).unit * DISTANCE)
				local HIT,POS                  = game.Workspace:FindPartOnRay(RAY, game.Workspace)
				local DIFF                     = math.floor((POS - AIM.Position).magnitude)
				PLAYER_HOLD[v.Name .. i]       = {}
				PLAYER_HOLD[v.Name .. i].dist  = DISTANCE
				PLAYER_HOLD[v.Name .. i].plr   = v
				PLAYER_HOLD[v.Name .. i].diff  = DIFF
				table.insert(DISTANCES, DIFF)
			end
		end
	end
 
	if unpack(DISTANCES) == nil then
		return false
	end
 
	local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
	if L_DISTANCE > 20 then
		return false
	end
 
	for i, v in pairs(PLAYER_HOLD) do
		if v.diff == L_DISTANCE then
			return v.plr
		end
	end
	return false
end
 
GUI_MAIN                           = Instance.new('ScreenGui', game.CoreGui)
GUI_TARGET                         = Instance.new('TextLabel', GUI_MAIN)
GUI_AIM_AT                         = Instance.new('TextLabel', GUI_MAIN)
 
GUI_MAIN.Name                      = 'AIMBOT'
 
GUI_TARGET.Size                    = UDim2.new(0,200,0,30)
GUI_TARGET.BackgroundTransparency  = 0.5
GUI_TARGET.BackgroundColor         = BrickColor.new('Fossil')
GUI_TARGET.BorderSizePixel         = 0
GUI_TARGET.Position                = UDim2.new(0.5,-100,0,0)
GUI_TARGET.Text                    = 'AIMBOT : OFF'
GUI_TARGET.TextColor3              = Color3.new(1,1,1)
GUI_TARGET.TextStrokeTransparency  = 1
GUI_TARGET.TextWrapped             = true
GUI_TARGET.FontSize                = 'Size24'
GUI_TARGET.Font                    = 'SourceSansBold'
 
GUI_AIM_AT.Size                    = UDim2.new(0,200,0,20)
GUI_AIM_AT.BackgroundTransparency  = 0.5
GUI_AIM_AT.BackgroundColor         = BrickColor.new('Fossil')
GUI_AIM_AT.BorderSizePixel         = 0
GUI_AIM_AT.Position                = UDim2.new(0.5,-100,0,30)
GUI_AIM_AT.Text                    = 'AIMING : HEAD'
GUI_AIM_AT.TextColor3              = Color3.new(1,1,1)
GUI_AIM_AT.TextStrokeTransparency  = 1
GUI_AIM_AT.TextWrapped             = true
GUI_AIM_AT.FontSize                = 'Size18'
GUI_AIM_AT.Font                    = 'SourceSansBold'
 
local TRACK = false
 
function CREATE(BASE, TEAM)
	local ESP_MAIN                   = Instance.new('BillboardGui', PLAYER.PlayerGui)
	local ESP_DOT                    = Instance.new('Frame', ESP_MAIN)
	local ESP_NAME                   = Instance.new('TextLabel', ESP_MAIN)
 
	ESP_MAIN.Name                    = 'ESP'
	ESP_MAIN.Adornee                 = BASE
	ESP_MAIN.AlwaysOnTop             = true
	ESP_MAIN.ExtentsOffset           = Vector3.new(0, 1, 0)
	ESP_MAIN.Size                    = UDim2.new(0, 5, 0, 5)
 
	ESP_DOT.Name                     = 'DOT'
	ESP_DOT.BackgroundColor          = BrickColor.new('Bright red')
	ESP_DOT.BackgroundTransparency   = 0.3
	ESP_DOT.BorderSizePixel          = 0
	ESP_DOT.Position                 = UDim2.new(-0.5, 0, -0.5, 0)
	ESP_DOT.Size                     = UDim2.new(2, 0, 2, 0)
	ESP_DOT.Visible                  = true
	ESP_DOT.ZIndex                   = 10
 
	ESP_NAME.Name                    = 'NAME'
	ESP_NAME.BackgroundColor3        = Color3.new(255, 255, 255)
	ESP_NAME.BackgroundTransparency  = 1
	ESP_NAME.BorderSizePixel         = 0
	ESP_NAME.Position                = UDim2.new(0, 0, 0, -40)
	ESP_NAME.Size                    = UDim2.new(1, 0, 10, 0)
	ESP_NAME.Visible                 = true
	ESP_NAME.ZIndex                  = 10
	ESP_NAME.Font                    = 'ArialBold'
	ESP_NAME.FontSize                = 'Size14'
	ESP_NAME.Text                    = BASE.Parent.Name:upper()
	ESP_NAME.TextColor               = BrickColor.new('Bright red')
end
 
function CLEAR()
	for _,v in pairs(PLAYER.PlayerGui:children()) do
		if v.Name == 'ESP' and v:IsA('BillboardGui') then
			v:Destroy()
		end
	end
end
 
function FIND()
	CLEAR()
	TRACK = true
	spawn(function()
		while wait() do
			if TRACK then
				CLEAR()
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Character and v.Character:FindFirstChild('Head') then
						if _G.FREE_FOR_ALL == false then
							if v.TeamColor ~= PLAYER.TeamColor then
								if v.Character:FindFirstChild('Head') then
									CREATE(v.Character.Head, true)
								end
							end
						else
							if v.Character:FindFirstChild('Head') then
								CREATE(v.Character.Head, true)
							end
						end
					end
				end
			end
		end
		wait(1)
	end)
end
 
MOUSE.Button2Down:connect(function()
	ENABLED = true
end)
 
MOUSE.Button2Up:connect(function()
	ENABLED = false
end)
 
MOUSE.KeyDown:connect(function(KEY)
	KEY = KEY:lower():byte()
	if KEY == _G.ESP_BIND then
		if ESP_ENABLED == false then
			FIND()
			ESP_ENABLED = false
			print('ESP : ON')
		elseif ESP_ENABLED == true then
			wait()
			CLEAR()
			TRACK = false
			ESP_ENABLED = false
			print('ESP : OFF')
		end
	end
end)
 
MOUSE.KeyDown:connect(function(KEY)
	if KEY == _G.CHANGE_AIM then
		if _G.AIM_AT == 'Head' then
			_G.AIM_AT = 'Torso'
			GUI_AIM_AT.Text = 'AIMING : TORSO'
		elseif _G.AIM_AT == 'Torso' then
			_G.AIM_AT = 'Head'
			GUI_AIM_AT.Text = 'AIMING : HEAD'
		end
	end
end)
 
game:GetService('RunService').RenderStepped:connect(function()
	if ENABLED then
		local TARGET = GetNearestPlayerToMouse()
		if (TARGET ~= false) then
			local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
			if AIM then
				CC.CoordinateFrame = CFrame.new(CC.CoordinateFrame.p, AIM.CFrame.p)
			end
			GUI_TARGET.Text = 'AIMBOT : '.. TARGET.Name:sub(1, 5)
		else
			GUI_TARGET.Text = 'AIMBOT : OFF'
		end
	end
end)
 
repeat
	wait()
	if ESP_ENABLED == true then
		FIND()
	end
until ESP_ENABLED == false       
   -- The function that takes place when the button is pressed
   end,
})

local Button = AimbotTab:CreateButton({
   Name = "Mobile Aimbot",
   Callback = function()
            Rayfield:Notify({
   Title = "Mobile Aimbot Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://raw.githubusercontent.com/sdfesdfsedf/srgtergasdfs/main/wwwwwww", true))()
   -- The function that takes place when the button is pressed
   end,
})

local VisualsTab = Window:CreateTab("👀Visuals", nil) -- Title, Image
local Section = VisualsTab:CreateSection("ESP")


local Button = VisualsTab:CreateButton({
   Name = "ESP",
   Callback = function()
            Rayfield:Notify({
   Title = "ESP Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to create a highlight for a player's character
local function createHighlight(character)
    if character and character:FindFirstChild("HumanoidRootPart") then
        -- Check if a highlight already exists
        if not character:FindFirstChild("PlayerHighlight") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "PlayerHighlight"
            highlight.Adornee = character
            highlight.FillColor = Color3.fromRGB(128, 0, 128) -- Purple
            highlight.OutlineColor = Color3.fromRGB(0, 0, 0) -- Black outline
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop -- See through walls
            highlight.Parent = character
        end
    end
end

-- Function to update highlights for all players
local function refreshHighlights()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            createHighlight(player.Character)
        end
    end
end

-- Regularly refresh highlights every 1 second
while task.wait(1) do
    refreshHighlights()
end

   -- The function that takes place when the button is pressed
   end,
})

local OtherTab = Window:CreateTab("Other", nil) -- Title, Image
local Section = OtherTab:CreateSection("Main")

local Button = OtherTab:CreateButton({
   Name = "Anti AFK",
   Callback = function()
            Rayfield:Notify({
   Title = "Anti AFK Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            local Player = game.Players.LocalPlayer
local character = Player.Character or Player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function Jump()
    humanoid.Jump = true
    wait()
    humanoid.Jump = false
end

while true do
    Jump()
    wait(1140)
end
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "No Textures",
   Callback = function()
            Rayfield:Notify({
   Title = "No Textures Activated",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

-- Store original settings
local originalSettings = {
    GlobalShadows = Lighting.GlobalShadows,
    FogEnd = Lighting.FogEnd,
    QualityLevel = settings().Rendering.QualityLevel,
}

-- Function to enable low graphics mode
local function enableLowGraphics()
    -- Change materials to SmoothPlastic
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("Part") or v:IsA("MeshPart") then
            v.Material = Enum.Material.SmoothPlastic
            v.Reflectance = 0
        elseif v:IsA("Decal") then
            v.Transparency = 1
        end
    end

    -- Disable lighting effects
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 1000 -- Adjust fog distance as needed

    -- Set quality level to lowest
    settings().Rendering.QualityLevel = 1

    print("Low graphics mode enabled.")
end

-- Function to disable low graphics mode and revert settings
local function disableLowGraphics()
    -- Restore original materials and properties (this may need adjustment based on your game's specifics)
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("Part") or v:IsA("MeshPart") then
            v.Material = Enum.Material.Plastic -- Change back to original material if known 
            v.Reflectance = 0.5 -- Adjust as necessary
        elseif v:IsA("Decal") then
            v.Transparency = 0 -- Make decals visible again 
        end
    end

    -- Restore lighting effects 
    Lighting.GlobalShadows = originalSettings.GlobalShadows
    Lighting.FogEnd = originalSettings.FogEnd

    -- Restore quality level 
    settings().Rendering.QualityLevel = originalSettings.QualityLevel

    print("Low graphics mode disabled.")
end

-- Example usage: Enable low graphics at script start
enableLowGraphics()

-- To disable low graphics, call `disableLowGraphics()` when needed.

   -- The function that takes place when the button is pressed
   end,
})

local Slider = OtherTab:CreateSlider({
   Name = "FPS Cap",
   Range = {1, 1000},
   Increment = 1,
   Suffix = "fps",
   CurrentValue = 60,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   setfpscap(Value)
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Stroke dick(R15)",
   Callback = function()
            Rayfield:Notify({
   Title = "Stroke dick(R15) Activated",
   Content = "Enjoy(u gay for this)",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://pastefy.app/YZoglOyJ/raw"))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Stroke dick(R6)",
   Callback = function()
            Rayfield:Notify({
   Title = "Stroke dick(R6)",
   Content = "Enjoy(u gay for this)",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
   -- The function that takes place when the button is pressed
   end,
})
local Section = OtherTab:CreateSection("Da Hood")

local Toggle = OtherTab:CreateToggle({
   Name = "Auto farm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
local tool = game.Players.LocalPlayer.Backpack.Combat

local function getMoneyAroundMe() 
    wait(0.5)
    for i, money in ipairs(game.Workspace.Ignored.Drop:GetChildren()) do
        if money.Name == "MoneyDrop" and (money.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 20 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = money.CFrame
            fireclickdetector(money.ClickDetector)
            wait(0.5)
        end  
    end
end


local function startAutoFarm() 
    humanoid:EquipTool(tool)

    for i, v in ipairs(game.Workspace.Cashiers:GetChildren()) do
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Open.CFrame * CFrame.new(0, 0, 2)

        for i = 0, 15 do
            wait(0.5)
            tool:Activate()
        end

        getMoneyAroundMe()

    end



    wait(0.5)
 
end

startAutoFarm()
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Enclosed GUI",
   Callback = function()
            Rayfield:Notify({
   Title = "Enclosed GUI Loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet('https://raw.githubusercontent.com/Pvpahh/enclosed/main/enclosed'))()
   -- The function that takes place when the button is pressed
   end,
})

local Section = OtherTab:CreateSection("Other Games")

local Button = OtherTab:CreateButton({
   Name = "Prison Ware Gui",
   Callback = function()
            Rayfield:Notify({
   Title = "Prison Ware Gui Loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Denverrz/scripts/master/PRISONWARE_v1.3.txt"))();
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Starry Tower of Hell",
   Callback = function()
            Rayfield:Notify({
   Title = "Starry Tower of Hell Loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
          getgenv().ignoreGameCheck = false;
loadstring(game:HttpGet("https://luau.tech/build"))()  
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "BloxFruits Gui",
   Callback = function()
            Rayfield:Notify({
   Title = "BloxFruits Gui Loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://raw.githubusercontent.com/ToraScript/Script/main/BloxFruitsButGood"))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Owl hub",
   Callback = function()
            Rayfield:Notify({
   Title = "Owl hub loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Cri..."))()
   -- The function that takes place when the button is pressed
   end,
})

local Button = OtherTab:CreateButton({
   Name = "Inf Yeild",
   Callback = function()
            Rayfield:Notify({
   Title = "Inf Yeild Loaded",
   Content = "Enjoy",
   Duration = 4,
   Image = nil,
})
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
   -- The function that takes place when the button is pressed
   end,
})
